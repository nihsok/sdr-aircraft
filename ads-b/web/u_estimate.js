d3.csv("./data.csv").then(function(data){
  const margin = {top:10, right:15, bottom:45, left:75},
        width  = 495 - margin.left - margin.right,
        height = width//495 - margin.top - margin.bottom;

  const x = d3.scaleLinear().range([0, width])
  const y = d3.scaleLinear().range([height, 0])

  const svg = d3.select("#check")
    .append("svg")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.top + margin.bottom)
    .append("g")
      .attr("transform","translate(" + margin.left + "," + margin.top + ")")

  const tooltip = d3.select("body")
    .append("div")
    .attr("class", "tooltip")
    .style("background-color", "white")
  //x axis
  svg.append("g")
    .attr("transform", "translate(0," + height + ")")
    .call(d3
      .axisBottom(x.domain([-350,350]))
      .tickValues(d3.range(-350,351,50))
      .tickFormat(val => val% 100 == 0 ? val : ''))
    .style("font-size",20)
    .append("text")
      .attr("fill", "black")
      .attr("x", width / 2 )
      .attr("y", 40)
      .text('Zonal component [m/s]')
  svg.append("g")
    .call(d3
      .axisTop(x.domain([-350,350]))
      .tickValues(d3.range(-350,351,50))
      .tickFormat(''))
  //y axis
  svg.append("g")
    .call(d3
      .axisLeft(y.domain([-350,350]))
      .tickValues(d3.range(-350,351,50))
      .tickFormat((val) => val % 10 == 0 ? val.toString() : ''))
    .style("font-size",20)
    .append("text")
    .attr("fill","black")
    .attr("text-anchor","middle")
    .attr("x",  - height / 2 - margin.top)
    .attr("y", -55)
    .attr("transform","rotate(-90)")
    .text("Meridional component [m/s]")
  svg.append("g")
    .attr('transform',"translate(" + width + ",0)")
    .call(d3
      .axisRight(y.domain([-350,350]))
      .tickValues(d3.range(-350,351,50))
      .tickFormat(''))

  svg.selectAll("circle")
    .data(d3.range(450,49,-50))
    .enter()
    .append("circle")
    .attr("fill","none")
    .attr("stroke","black")
    .attr("cx",x(0))
    .attr("cy",y(0))
    .attr("r",d => d*445/(2*width))
    .style("opacity", 0.1)
    .attr("clip-path","url(#clip-t)")
    .on("mouseover",function(event,d){
      d3.select(event.target).style("opacity",1)
      tooltip
        .style("visibility","visible")
        .text('|v|='+d+'m/s')
    })
    .on("mousemove",function(event,d){
      tooltip
        .style("left", event.pageX + 15 + "px")
        .style("top", event.pageY -20 + "px")
    })
    .on("mouseout",function(event){
      d3.select(event.target).style("opacity",0.1)
      tooltip.style("visibility","hidden")
    })
    
  svg.selectAll(null)
    .data(data.filter(d=>d.u))
    .enter()
    .append("line")
    .attr("x1", d=>x(d.vt_x))
    .attr("y1", d=>y(d.vt_y))
    .attr("x2", d=>x(d.gs_x))
    .attr("y2", d=>y(d.gs_y))
    .style("stroke","gray")
    .style("stroke-width",0.1)
    .style("opacity",0.1)

  svg.selectAll(null)
    .data(data.filter(d=>d.u))
    .enter()
    .append("line")
    .attr("x1", d=>x(d.u))
    .attr("y1", d=>y(d.v))
    .attr("x2", d=>x(d.gs_x))
    .attr("y2", d=>y(d.gs_y))
    .style("stroke","gray")
    .style("stroke-width",0.1)
    .style("opacity",0.1)

  for (color of ['red','blue','black']){
    svg.append("defs")
      .append('marker')
      .attr('id','arrow-'+color)
      .attr('refX',10)
      .attr("refY",5)
      .attr("markerWidth",10)
      .attr("markerHeight",10)
      .attr("orient","auto")
      .append("path")
      .attr("d","M10 5 0 2 0 8Z")
      .attr("fill",color)
  }

  svg.selectAll(null)
    .data(data.filter(d=>d.u))
    .enter()
    .append("line")
    .attr("x1", x(0))
    .attr("y1", y(0))
    .attr("x2", d=>x(d.gs_x))
    .attr("y2", d=>y(d.gs_y))
    .style("stroke","black")
    .style("stroke-width",0.1)
    .attr("marker-end","url(#arrow-black)")

  svg.selectAll(null)
    .data(data.filter(d=>d.u))
    .enter()
    .append("line")
    .attr("x1", x(0))
    .attr("y1", y(0))
    .attr("x2", d=>x(d.vt_x))
    .attr("y2", d=>y(d.vt_y))
    .style("stroke","blue")
    .style("stroke-width",0.1)
    .attr("marker-end","url(#arrow-blue)")

  svg.selectAll(null)
    .data(data.filter(d=>d.u))
    .enter()
    .append("line")
    .attr("x1", x(0))
    .attr("y1", y(0))
    .attr("x2", d=>x(d.u))
    .attr("y2", d=>y(d.v))
    .style("stroke","red")
    .style("stroke-width",0.3)
    .attr("marker-end","url(#arrow-red)")
})